apiVersion: v1
kind: Pod
metadata:
  name: libra-faucet
  labels:
    app: libra-faucet
    libra-node: "true"
spec:
  hostNetwork: true
  initContainers:
  - name: init
    image: pariwesh/thesis:libra_init
    volumeMounts:
    - mountPath: /opt/libra/data
      name: data
    securityContext:
      runAsUser: 0 # To get permissions to write to /opt/libra/data
    command:
    - "bash"
    - "-c"
    - |
      set -x;
      CFG_SEED_PEER_IP=$(kubectl get pod/val-0 -o=jsonpath='{.status.podIP}');
      NUM_VALIDATORS=1;
      while [ -z "$CFG_SEED_PEER_IP" ]; do
        sleep 5;
        CFG_SEED_PEER_IP=$(kubectl get pod/val-0 -o=jsonpath='{.status.podIP}');
        echo "Waiting for pod/val-0 IP Address";
      done;
      echo -n "$CFG_SEED_PEER_IP" > /opt/libra/data/seed_peer_ip
  containers:
  - name: faucet
    image: pariwesh/thesis:libra_mint
    resources:
      requests:
        cpu: 5m
    ports:
    - containerPort: 9080
    - containerPort: 9000
    volumeMounts:
    - mountPath: /opt/libra/data
      name: data
    env:
    - name: LOG_LEVEL
      value: "INFO"
    - name: AC_HOST
      value: "192.168.64.4"
    - name: AC_PORT
      value: "8080"
    - name: RUST_LOG
      value: "warn"
    - name: RUST_BACKTRACE
      value: "1"
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    command:
      - "bash"
      - "-c"
      - |
        set -x;
        export RUST_BACKTRACE=$RUST_BACKTRACE;
        export CFG_LISTEN_ADDR=$MY_POD_IP;
        export AC_HOST=$(cat /opt/libra/data/seed_peer_ip);
        export RUST_BACKTRACE=full

        /opt/libra/bin/config-builder faucet -o /opt/libra/etc
        cd /opt/libra/bin && exec gunicorn --bind 0.0.0.0:9000 --access-logfile - --error-logfile - --log-level $LOG_LEVEL server

        #exec bash /opt/libra/bin/docker-run.sh
        # while [ 1 ]; do
        #   sleep 500;
        #   echo "sleeping to keep awake";
        # done;
  volumes:
  - name: data
    hostPath:
      path: /data
      type: Directory
        
        